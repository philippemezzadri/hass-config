# # https://www.home-assistant.io/integrations/rest
# # https://pon.fr/home-assistant-vacances-scolaires/
# # https://github.com/papo-o/home-assistant-config/blob/master/integrations/vacances_scolaires.yaml
# # vous avez une seule chose à personnaliser, l'academie
# #   {% set location = 'Limoges' %}
# liste des académies : 'Corse', 'Polynésie', 'Nouvelle Calédonie', 'Guyane', 'Aix-Marseille',
# 'Amiens', 'Besançon', 'Bordeaux', 'Clermont-Ferrand', 'Créteil', 'Dijon', 'Grenoble', 'Lille',
# 'Limoges', 'Lyon', 'Montpellier', 'Nancy-Metz', 'Nantes', 'Nice', 'Orléans-Tours', 'Paris',
# 'Poitiers', 'Reims', 'Rennes', 'Strasbourg', 'Toulouse', 'Versailles', 'Mayotte', 'Réunion',
# 'Martinique', 'Saint Pierre et Miquelon', 'Wallis et Futuna', 'Caen', 'Rouen', 'Guadeloupe', 'Normandie'
# https://help.opendatasoft.com/apis/ods-search-v1/#search-api-v1

homeassistant:
  customize:
    sensor.vacances_scolaires:
      friendly_name: "Vacances"
      icon: mdi:check-circle

sensor:
  - platform: rest
    scan_interval: "00:30:00"
    name: vacances_scolaires
    json_attributes_path: "$.records[0].fields"
    json_attributes:
      - start_date
      - end_date
      - description
    resource_template: |-
      {% set location = 'Versailles' %}
      {% set rows = '1'%}
      {% set aujourdhui = now().strftime('%Y-%m-%d')%}
      {% set dayOfYear =  now().strftime('%j') %}
      {% set year =  now().strftime('%Y') | int %}
      {% set lastYear = year - 1 %}
      {% set nextYear = year + 1 %}
      {% if dayOfYear > '244' %}
      {% set schoolYear = (year | string) + "-" + (nextYear | string) %}
      {%- else -%}
      {% set schoolYear = (lastYear | string) + "-" + (year | string) %}
      {%- endif %}
      https://data.education.gouv.fr/api/records/1.0/search/?dataset=fr-en-calendrier-scolaire&facet=start_date&facet=end_date&rows={{rows}}&refine.location={{location}}&sort=-end_date&q=end_date%3E={{aujourdhui}}
    value_template: |-
      {% set aujourdhui = now().strftime('%Y-%m-%d')%}
      {% for record in value_json.records -%}
      {% if aujourdhui >= record.fields.start_date and aujourdhui <= record.fields.end_date %} 
      {%- if record.fields.description %}{{record.fields.description}} jusqu'au {{ as_timestamp(record.fields.end_date) | timestamp_custom('%d-%m-%Y') }} {% endif %}
      {% else %} 
      {%- if record.fields.end_date > aujourdhui and record.fields.description %} prochaines : {{record.fields.description}} {{ as_timestamp(record.fields.start_date) | timestamp_custom('%d-%m-%Y') }}{% endif %}
      {% endif %}
      {%- endfor %}

binary_sensor:
  - platform: workday
    country: FR

  - platform: template
    sensors:
      vacances_scolaires_aujourdhui:
        friendly_name: "Vacances Scolaires aujourd'hui"
        value_template: |-
          {% set aujourdhui = now().strftime('%Y-%m-%d')%}
          {% if aujourdhui < states.sensor.vacances_scolaires.attributes["start_date"] or aujourdhui > states.sensor.vacances_scolaires.attributes["end_date"] %}
          false
          {% else %}
          true
          {% endif %}

  - platform: template
    sensors:
      vacances_scolaires_demain:
        friendly_name: "Vacances Scolaires demain"
        value_template: |-
          {% set demain = (as_timestamp(now()) + (24*3600)) | timestamp_custom('%Y-%m-%d', True) %}
          {% if demain < states.sensor.vacances_scolaires.attributes["start_date"] or demain > states.sensor.vacances_scolaires.attributes["end_date"] %}
          false
          {% else %}
          true
          {% endif %}

  - platform: template
    sensors:
      non_working_day:
         friendly_name: "Weekend et jour férié"
         value_template: >-
           {{ is_state('binary_sensor.workday_sensor', 'off') }}